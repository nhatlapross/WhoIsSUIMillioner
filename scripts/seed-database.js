// Database seeding script for testing
const { v4: uuidv4 } = require('uuid');

// Import database services
const { UserService, QuestionService, connectDB } = require('./database-services');

async function seedDatabase() {
    console.log('üå± Starting database seeding...');

    try {
        await connectDB();
        console.log('‚úÖ Connected to MongoDB');

        // Seed sample users
        const sampleUsers = [
            {
                walletAddress: '0x1234567890abcdef1234567890abcdef12345678',
                username: 'TestUser1',
                email: 'test1@example.com',
                totalWinnings: 1500,
                highestScore: 12000,
                statistics: {
                    soloGames: 15,
                    multiplayerGames: 8,
                    questionsAnswered: 230,
                    correctAnswers: 180,
                    winRate: 0.65
                }
            },
            {
                walletAddress: '0xabcdef1234567890abcdef1234567890abcdef12',
                username: 'TestUser2',
                email: 'test2@example.com',
                totalWinnings: 2300,
                highestScore: 15000,
                statistics: {
                    soloGames: 20,
                    multiplayerGames: 12,
                    questionsAnswered: 320,
                    correctAnswers: 280,
                    winRate: 0.75
                }
            }
        ];

        for (const userData of sampleUsers) {
            try {
                const existingUser = await UserService.findByWalletAddress(userData.walletAddress);
                if (!existingUser) {
                    await UserService.createUser(userData);
                    console.log(`üë§ Created user: ${userData.username}`);
                } else {
                    console.log(`üë§ User already exists: ${userData.username}`);
                }
            } catch (error) {
                console.error(`‚ùå Error creating user ${userData.username}:`, error.message);
            }
        }

        // Seed sample questions
        const sampleQuestions = [
            {
                questionId: `q_${uuidv4()}`,
                questionText: "Th·ªß ƒë√¥ c·ªßa Vi·ªát Nam l√† g√¨?",
                options: ['H√† N·ªôi', 'H·ªì Ch√≠ Minh', 'ƒê√† N·∫µng', 'H·∫£i Ph√≤ng'],
                correctAnswer: 0,
                difficulty: 'easy',
                category: 'ƒê·ªãa l√Ω',
                language: 'vi',
                source: 'manual',
                tags: ['vi·ªát nam', 'th·ªß ƒë√¥', 'ƒë·ªãa l√Ω']
            },
            {
                questionId: `q_${uuidv4()}`,
                questionText: "S√¥ng n√†o d√†i nh·∫•t Vi·ªát Nam?",
                options: ['S√¥ng H·ªìng', 'S√¥ng Mekong', 'S√¥ng ƒê·ªìng Nai', 'S√¥ng H∆∞∆°ng'],
                correctAnswer: 1,
                difficulty: 'medium',
                category: 'ƒê·ªãa l√Ω',
                language: 'vi',
                source: 'manual',
                tags: ['vi·ªát nam', 's√¥ng', 'ƒë·ªãa l√Ω']
            },
            {
                questionId: `q_${uuidv4()}`,
                questionText: "ƒê·ªânh n√∫i cao nh·∫•t Vi·ªát Nam l√†?",
                options: ['Phan Xi PƒÉng', 'Pu Ta Leng', 'T√† Ch√¨ Nh√π', 'Pu Si Lung'],
                correctAnswer: 0,
                difficulty: 'medium',
                category: 'ƒê·ªãa l√Ω',
                language: 'vi',
                source: 'manual',
                tags: ['vi·ªát nam', 'n√∫i', 'ƒë·ªãa l√Ω']
            },
            {
                questionId: `q_${uuidv4()}`,
                questionText: "T·ªânh n√†o c√≥ di·ªán t√≠ch l·ªõn nh·∫•t Vi·ªát Nam?",
                options: ['Ngh·ªá An', 'Gia Lai', 'L√¢m ƒê·ªìng', 'ƒê·∫Øk L·∫Øk'],
                correctAnswer: 0,
                difficulty: 'hard',
                category: 'ƒê·ªãa l√Ω',
                language: 'vi',
                source: 'manual',
                tags: ['vi·ªát nam', 't·ªânh', 'di·ªán t√≠ch']
            },
            {
                questionId: `q_${uuidv4()}`,
                questionText: "Th√†nh ph·ªë n√†o c√≥ bi·ªát danh 'Th√†nh ph·ªë Hoa ph∆∞·ª£ng ƒë·ªè'?",
                options: ['H√† N·ªôi', 'Hu·∫ø', 'H·∫£i Ph√≤ng', 'ƒê√† N·∫µng'],
                correctAnswer: 3,
                difficulty: 'medium',
                category: 'VƒÉn h√≥a',
                language: 'vi',
                source: 'manual',
                tags: ['vi·ªát nam', 'th√†nh ph·ªë', 'vƒÉn h√≥a']
            },
            {
                questionId: `q_${uuidv4()}`,
                questionText: "NƒÉm n√†o Vi·ªát Nam gi√†nh ƒë·ªôc l·∫≠p?",
                options: ['1945', '1946', '1954', '1975'],
                correctAnswer: 0,
                difficulty: 'easy',
                category: 'L·ªãch s·ª≠',
                language: 'vi',
                source: 'manual',
                tags: ['vi·ªát nam', 'l·ªãch s·ª≠', 'ƒë·ªôc l·∫≠p']
            },
            {
                questionId: `q_${uuidv4()}`,
                questionText: "Ai l√† ng∆∞·ªùi s√°ng l·∫≠p ra ch·ªØ Qu·ªëc ng·ªØ?",
                options: ['Alexandre de Rhodes', 'Phan B·ªôi Ch√¢u', 'Nguy·ªÖn Du', 'H·ªì Ch√≠ Minh'],
                correctAnswer: 0,
                difficulty: 'hard',
                category: 'L·ªãch s·ª≠',
                language: 'vi',
                source: 'manual',
                tags: ['vi·ªát nam', 'ch·ªØ qu·ªëc ng·ªØ', 'l·ªãch s·ª≠']
            },
            {
                questionId: `q_${uuidv4()}`,
                questionText: "T√°c ph·∫©m 'Truy·ªán Ki·ªÅu' c√≥ bao nhi√™u c√¢u?",
                options: ['3254', '3252', '3250', '3256'],
                correctAnswer: 0,
                difficulty: 'hard',
                category: 'VƒÉn h·ªçc',
                language: 'vi',
                source: 'manual',
                tags: ['vi·ªát nam', 'vƒÉn h·ªçc', 'truy·ªán ki·ªÅu']
            },
            {
                questionId: `q_${uuidv4()}`,
                questionText: "Lo·∫°i ti·ªÅn t·ªá c·ªßa Vi·ªát Nam l√† g√¨?",
                options: ['ƒê·ªìng', 'Xu', 'H√†o', 'Kip'],
                correctAnswer: 0,
                difficulty: 'easy',
                category: 'Kinh t·∫ø',
                language: 'vi',
                source: 'manual',
                tags: ['vi·ªát nam', 'ti·ªÅn t·ªá', 'kinh t·∫ø']
            },
            {
                questionId: `q_${uuidv4()}`,
                questionText: "M√≥n ƒÉn n√†o ƒë∆∞·ª£c coi l√† ƒë·∫∑c tr∆∞ng nh·∫•t c·ªßa Vi·ªát Nam?",
                options: ['Ph·ªü', 'B√∫n ch·∫£', 'B√°nh m√¨', 'Ch·∫£ c√°'],
                correctAnswer: 0,
                difficulty: 'easy',
                category: '·∫®m th·ª±c',
                language: 'vi',
                source: 'manual',
                tags: ['vi·ªát nam', '·∫©m th·ª±c', 'ph·ªü']
            }
        ];

        console.log(`üìù Seeding ${sampleQuestions.length} questions...`);
        const createdQuestions = await QuestionService.createMultipleQuestions(sampleQuestions);
        console.log(`‚úÖ Created ${createdQuestions.length} questions`);

        // Get and display statistics
        const userCount = await UserService.getUserCount();
        const questionStats = await QuestionService.getQuestionStats();

        console.log('\nüìä Database Statistics:');
        console.log(`üë• Total Users: ${userCount}`);
        console.log(`‚ùì Total Questions: ${questionStats.total}`);
        console.log(`üìà Questions by Difficulty:`, questionStats.byDifficulty);
        console.log(`üìö Questions by Category:`, questionStats.byCategory);

        console.log('\nüéâ Database seeding completed successfully!');
        
    } catch (error) {
        console.error('‚ùå Error seeding database:', error);
        process.exit(1);
    }
}

// Run the seeding script
if (require.main === module) {
    seedDatabase().then(() => {
        console.log('‚úÖ Seeding script completed');
        process.exit(0);
    }).catch(error => {
        console.error('‚ùå Seeding script failed:', error);
        process.exit(1);
    });
}

module.exports = { seedDatabase };